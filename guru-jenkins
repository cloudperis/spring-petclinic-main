pipeline{

agent any

tools {
    maven "mvn"
}

stages{
    stage('source'){
        steps{

            git "https://github.com/cloudperis/spring-petclinic-main.git"

        }
    }
stage('build'){
    steps{
        slackSend channel: 'olulegend-jenkinschannel', color: '#7fff00', message: 'Started ${env.JOB_Name} at #${env.BULD_NUMBER}:\n${env.BUILD_url}'
        sh "mvn package"
    }
}

stage('test'){
    steps{
        junit "**target/surefire-reports/TEST-*.xml"
    }
}

stage("Archive"){
    steps{
        archiveArtifacts "target/*.jar"
    }
}

stage("Publish Artifacts"){
    steps{
        s3Upload consoleLogLevel: 'INFO', dontSetBuildResultOnFailure: false, dontWaitForConcurrentBuildCompletion: false, entries: [[bucket: 'guru2-pet-clinic', excludedFile: '', flatten: false, gzipFiles: false, keepForever: false, managedArtifacts: false, noUploadOnFailure: true, selectedRegion: 'us-east-1', showDirectlyInBrowser: false, sourceFile: 'target/*.jar', storageClass: 'STANDARD', uploadFromSlave: false, useServerSideEncryption: false]], pluginFailureResultConstraint: 'FAILURE', profileName: 'guru-jenkinss', userMetadata: []
    }
}

  stage('Deploy-Dev'){
            steps{
                echo 'deploying application updates....'
                withCredentials([[
                      $class: 'AmazonWebServicesCredentialsBinding',
                      credentialsId: "Jenkins-aws",
                      accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                      secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {

                          
                          sh "aws ec2 reboot-instances --instance-ids ${params.devserver} --region us-east-1"

                      }


            }
        }

        
    }